Maven 2 FindBugs Plugin - How to Use

 This plugin generates a FindBugs report.


*How to Generate FindBugs Reports

**Configuration Parameters

 The threshold filters out any reports that have lower severity than the threshold.

 The effort allows to change the tradeof between increased precision (and thus more found bugs) and usage of more memory and time to complete.

 The filters allow specifying by class and method which bug categories to include/exclude in/from the reports. The {{{http://findbugs.sourceforge.net/manual/filter.html}filter format specification}} contains also useful examples.
 Another way to exclude bugs is to use FindBugs annotations, but those are not yet fully documented. The annotations also allow annotating more wanted usage information of fields and parameters allowing FindBugs to find more bugs. You can start by including the findbugs-annotations in your project classpath with provided scope.
 
 Please look up the {{{http://findbugs.sourceforge.net/manual/index.html}FindBugs documentation}} about more information.

-------------------
<reporting>
  ...
  <plugin>
    <groupId>org.codehaus.mojo</groupId>
    <artifactId>findbugs-maven-plugin</artifactId>
    <version>1.0-SNAPSHOT</version>
    <configuration>
      <threshold>High|Normal|Low|Exp|Ignore</threshold>
      <effort>Min|Default|Max</threshold>
      <excludeFilterFile>findbugs-exclude.xml</excludeFilterFile>
      <includeFilterFile>findbugs-include.xml</includeFilterFile>
    </configuration>
  </plugin>
  ...
</reporting>
-------------------

 Also, prior to the official release, the following plugin repository directive must be added to the pom as well:

-------------------
<pluginRepositories>
  ...
  <pluginRepository>
    <id>codehaus-snapshot-plugins</id>
    <name>codehaus-shapshot-plugins</name>
    <url>http://snapshots.repository.codehaus.org/</url>
    <snapshots>
      <enabled>true</enabled>
    </snapshots>
    <releases>
      <enabled>false</enabled>
    </releases>
  </pluginRepository>
  ...
</pluginRepositories>
-------------------

 Findbugs also cross-references with the JXR plugin to display code where issues exist.
 
*Known Issues and Limitations
 
 The underlining JavaNCSS tool is not currently able to analyze code written to compile with JDK 1.5+.

 When running findbugs on a project, the default heap size might not be enough to complete the build. For now there is no way to fork findbugs and run with it's own memory requirements, but the following system variable will allow you to do so for Maven:

-------------------
export MAVEN_OPTS=-Xmx384M
-------------------

